#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define SYM 1
#define NAV 2
#define FN 3

&mt {
    flavor = "balanced";
    retro-tap;
    quick-tap-ms = <125>;
    tapping_term_ms = <175>;
};

/ {
    behaviors {
        dot_excl: dot_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCL";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
	
	gqt: global-quick-tap {
	    compatible = "zmk,behavior-hold-tap";
	    label = "GLOBAL_QUICK_TAP";
	    #binding-cells = <2>;
	    flavor = "tap-preferred";
	    tapping-term-ms = <200>;
	    quick-tap-ms = <125>;
	    global-quick-tap;
	    bindings = <&kp>, <&kp>;
};
    };

    combos {
        compatible = "zmk,combos";
        combo_q {
            timeout-ms = <30>;
            key-positions = <0 1>;
            bindings = <&kp Q>;
            layers = <0>;
        };
	
        combo_z {
            timeout-ms = <30>;
            key-positions = <1 2>;
            bindings = <&kp Z>;
            layers = <0>;
        };
	
	combo_j {
            timeout-ms = <30>;
            key-positions = <21 22>;
            bindings = <&kp J>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
                                 &kp V       &kp W        &kp M       &kp K            &kp P  &kp F      &kp COMMA     &kp DOT
            &kp FSLH &kp C       &gqt LALT R &gqt LCTRL S &kp T       &kp B            &kp Y  &kp N      &gqt RCTRL E  &gqt RALT I &kp A  &kp SEMI
                     &kp X       &kp L       &gqt LGUI G  &kp D       &kp K            &kp P  &kp H      &gqt RGUI O   &kp U       &kp SQT
                                          &kp C_MUTE      &mo NAV     &kp SPACE    &skq RSHFT &mo SYM    &none
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        SYM_layer {
            bindings = <
                            &kp N7 &kp N8 &kp N9  &kp PIPE       &kp TILDE &kp HASH  &kp LBRC &kp RBRC
        &kp CARET &kp N0    &kp N1 &kp N2 &kp N3  &kp STAR       &kp GRAVE &kp UNDER &kp LBKT &kp RBKT &kp PRCNT  &kp AMPS
                  &kp PLUS  &kp N4 &kp N5 &kp N6  &kp PIPE       &kp TILDE &kp EQUAL &kp LT   &kp GT   &kp AT
                                   &trans &trans  &kp MINUS      &trans    &trans    &trans
            >; /* still need combos for bslsh and dollar */

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
       };
       
        NAV_layer {
            bindings = <
                                  &kp PG_DN &kp UP       &kp PG_UP    &kp C_PP             &kp LG(P) &kp LG(D)     &kp LS(LG(D)) &kp LG(Q)
            &kp C_PREV &kp C_NEXT &kp LEFT  &kp DOWN     &kp RIGHT    &kp LC(TAB)          &kp LG(L) &kp BSPC      &kp RCTRL     &kp RALT  &none &none
                       &kp HOME   &kp END   &kp C_VOL_DN &kp C_VOL_UP &kp LS(LC(TAB))      &none     &kp ENTER     &kp LG(O)     &kp LG(N) &none
                                            &trans       &none        &none                &trans    &kp DEL       &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        FN_layer {
            bindings = <
                              &kp F7 &kp F8 &kp F9 &kp F10      &none  &kp C_BRI_DN &kp C_BRI_UP &none
            &reset &bt BT_CLR &kp F1 &kp F2 &kp F3 &kp F11      &none  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &reset
                   &kp PSCRN  &kp F4 &kp F5 &kp F6 &kp F12      &none  &none        &bt BT_SEL 3 &bt BT_SEL 4 &none
                                     &trans &trans &trans       &trans &trans       &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };
    };
};
