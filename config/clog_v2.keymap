#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../zmk-nodefree-config/helper.h"

#define MAIN 0
#define SYM 1
#define NAV 2
#define MSE 3
#define FUN 4


&mt {
    flavor = "tap-preferred";
    retro-tap;
    quick-tap-ms = <125>;
    tapping_term_ms = <175>;
};

&lt {
    flavor = "tap-preferred";
    retro-tap;
    quick-tap-ms = <125>;
    tapping_term_ms = <175>;
};

/ {

    macros {
    	oxford_comma: oxford_comma {
	    label = "ZM_oxford_comma";
	    compatible = "zmk,behavior-macro";
	    #binding-cells = <0>;
	    wait-ms = <5>;
	    tap-ms = <5>;
	    bindings
	        = <&macro_press &kp LSHFT>
		, <&macro_tap &kp O>
		, <&macro_release &kp LSHFT>
		, <&macro_tap &kp X &kp F &kp O &kp R &kp D &kp SPC &kp C &kp O &kp M &kp M &kp A &kp DOT>
		;
	    };
	};

    behaviors {

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
	
	gqt: global-quick-tap {
	    compatible = "zmk,behavior-hold-tap";
	    label = "GLOBAL_QUICK_TAP";
	    #binding-cells = <2>;
	    flavor = "tap-preferred";
	    tapping-term-ms = <200>;
	    quick-tap-ms = <125>;
	    global-quick-tap;
	    bindings = <&kp>, <&kp>;
	};	
	
	dang: dot_bang {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_BANG";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	undshash: underscore_hash {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDERSCORE_HASH";
            #binding-cells = <0>;
            bindings = <&kp UNDERSCORE>, <&kp HASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	squostar: sqt_star {
            compatible = "zmk,behavior-mod-morph";
            label = "SQT_STAR";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp STAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

	dquipe: dqt_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "DQT_PIPE";
            #binding-cells = <0>;
            bindings = <&kp DQT>, <&kp PIPE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	slashes: slash_bslh {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_BSLH";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	colons: colon_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "COLON_SEMI";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	parens: LPAR_RPAR {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_RPAR";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp RPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

	quomma: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	sqtlt: sqt_layer_tap {
	    compatible = "zmk,behavior-hold-tap";
	    label = "SQT_LAYER_TAP";
	    #binding-cells = <2>;
	    flavor = "tap-preferred";
	    tapping-term-ms = <200>;
	    quick-tap-ms = <125>;
	    global-quick-tap;
	    bindings = <&mo>, <&squostar>;
	};
	
    };

/*                KEY POSITIONS

      ╭─────────────────╮ ╭─────────────────╮
╭─────╯  0   1   2   3  │ │  4   5   6   7  ╰──────╮
│ 8  9   10  11  12  13 │ │ 14  15  16  17  18  19 |
╰──╮ 20  21  22  23  24 │ │ 25  26  27  28  29 ╭───╯
   ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
               ╰────────╯ ╰────────╯            */

    combos {
        compatible = "zmk,combos";
	
        combo_q {
            timeout-ms = <30>;
            key-positions = <1 2>;
            bindings = <&kp Q>;
            layers = <0>;
        };

	combo_z {
            timeout-ms = <30>;
            key-positions = <22 23>;
            bindings = <&kp Z>;
            layers = <0>;
        };
	
	combo_j {
            timeout-ms = <30>;
            key-positions = <21 22>;
            bindings = <&kp J>;
            layers = <0>;
        };
	
	combo_bsp {
            timeout-ms = <30>;
            key-positions = <0 1>;
            bindings = <&kp BSPC>;
            layers = <0>;
        };
	
	combo_esc {
            timeout-ms = <30>;
            key-positions = <1 12>;
            bindings = <&kp ESCAPE>;
            layers = <0>;
        };
	
	combo_capsword {
	    timeout-ms = <30>;
            key-positions = <6 15>;
            bindings = <&caps_word>;
            layers = <0>;
	};
	

	combo_mins {
	    timeout-ms = <30>;
            key-positions = <27 28>;
            bindings = <&kp MINUS>;
            layers = <0>;
	};
	
	combo_ocrl {
	    timeout-ms = <30>;
            key-positions = <2 12>;
            bindings = <&kp LBRC>;
            layers = <0>;
	};
	
	combo_ccrl {
	    timeout-ms = <30>;
            key-positions = <5 15>;
            bindings = <&kp RBRC>;
            layers = <0>;
	};
	
	combo_lbkt {
	    timeout-ms = <30>;
            key-positions = <0 10>;
            bindings = <&kp LBKT>;
            layers = <0>;
	};
	
	combo_rbkt {
	    timeout-ms = <30>;
            key-positions = <7 17>;
            bindings = <&kp RBKT>;
            layers = <0>;
	};
	
	combo_lsft {
	    timeout-ms = <30>;
            key-positions = <10 11>;
            bindings = <&kp LSHFT>;
            layers = <0>;
	};
	
	combo_rsft {
	    timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&kp RSHFT>;
            layers = <0>;
	};
	
	combo_del {
	    timeout-ms = <30>;
            key-positions = <2 3>;
            bindings = <&kp DEL>;
            layers = <0>;
	};
	
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
                                 &kp W       &kp F        &kp P          &kp B            &colons    &kp L        &kp U         &kp Y
            &kp J    &kp R       &gqt LALT S &gqt LSHFT T &gqt LCTRL H   &kp K            &undshash  &gqt RCTRL N &gqt RSHFT A  &gqt RALT I &kp O  &slashes
                     &kp X       &kp C       &gqt LGUI G  &kp D          &kp V            &parens    &kp M        &quomma       &dang       &dquipe
                                              &kp C_MUTE  &sqtlt MSE 0   &lt NAV SPC      &lt SYM E  &lt ENTER MSE 0  &none
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        SYM_layer {
            bindings = <
                            &kp N7 &kp N8 &kp N9 &kp TILDE     &trans   &kp RBRC  &kp RBKT  &kp AT
            &none &kp N0    &kp N3 &kp N2 &kp N1 &kp N0        &kp PLUS &kp LBRC  &kp LBKT  &kp PRCNT &kp AMPS  &none
                  &none     &kp N4 &kp N5 &kp N6 &kp CARET     &trans   &kp LT    &kp GT    &trans     &trans
                                   &trans &kp N0 &trans        &trans    &trans     &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
       };
       
        NAV_layer {
            bindings = <
                              &kp CAPS  &kp TAB      &kp LS(LC(F22))  &bt BT_SEL 0    &none   &kp DEL   &kp UP    &kp HOME
           &none   &kp PSCRN  &sk LALT  &sk LSHFT    &sk LCTRL        &bt BT_SEL 1    &none   &kp LEFT  &kp DOWN  &kp RIGHT &kp INS &none
                   &none      &none     &sk LGUI     &none            &bt BT_SEL 2    &none   &kp BSPC  &kp PG_DN &kp PG_UP  &kp END
                                        &trans       &none            &none            &trans  &none      &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };
	
	MSE_layer {
            bindings = <
                         &none   &bt BT_CLR &none   &none   &none                           &bt BT_NXT   &bt BT_PRV  &bt BT_CLR
            &bootloader  &none   &none      &none   &none   &none                           &none   &none   &none  &none   &none   &bootloader
                         &reset  &none      &none   &none   &none                           &none   &none   &none  &none   &reset
                                            &trans  &none   &trans                          &trans  &none  &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        FUN_layer {
            bindings = <
                                   &kp F7 &kp F8 &kp F9 &kp F10       &kp F22 &kp F13 &kp F14 &kp F15
            &bootloader &reset     &kp F1 &kp F2 &kp F3 &kp F11       &kp F23 &kp F16 &kp F17 &kp F18  &reset  &bootloader
                        &bt BT_CLR &kp F4 &kp F5 &kp F6 &kp F12       &kp F24 &kp F19 &kp F20 &kp F21  &reset
                                         &trans &trans &trans        &trans &trans &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };
    };
};
