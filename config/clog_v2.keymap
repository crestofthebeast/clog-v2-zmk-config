#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define SYM 1
#define NAV 2
#define FN 3

&mt {
    flavor = "balanced";
    retro-tap;
    quick-tap-ms = <125>;
    tapping_term_ms = <175>;
};

/ {
	
    macros {
        lw_macro: lw_macro {
        compatible = "zmk,behavior-macro";
        label = "ZM_lw_macro";
        #binding-cells = <0>;
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&kp L &kp W>;
    	};
	
	wl_macro: wl_macro {
        compatible = "zmk,behavior-macro";
        label = "ZM_wl_macro";
        #binding-cells = <0>;
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&kp W &kp L>;
    	};
    };
    
    behaviors {

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
	
	gqt: global-quick-tap {
	    compatible = "zmk,behavior-hold-tap";
	    label = "GLOBAL_QUICK_TAP";
	    #binding-cells = <2>;
	    flavor = "tap-preferred";
	    tapping-term-ms = <200>;
	    quick-tap-ms = <125>;
	    global-quick-tap;
	    bindings = <&kp>, <&kp>;
	};
	
	weirdgqt: weird-global-quick-tap {
	    compatible = "zmk,behavior-hold-tap";
	    label = "WEIRD_GLOBAL_QUICK_TAP";
	    #binding-cells = <2>;
	    flavor = "tap-preferred";
	    tapping-term-ms = <200>;
	    quick-tap-ms = <125>;
	    global-quick-tap;
	    bindings = <&kp>, <&slang>;
	};
	
	slang: slash_bang {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_BANG";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	quomma: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	stot: star_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "STAR_DOT";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp STAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	sqtave: sqt_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "SQT_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
	
	quipe: dquote_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "DQUOTE_PIPE";
            #binding-cells = <0>;
            bindings = <&kp DQT>, <&kp PIPE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

/*                KEY POSITIONS

      ╭─────────────────╮ ╭─────────────────╮
╭─────╯  0   1   2   3  │ │  4   5   6   7  ╰──────╮
│ 8  9   10  11  12  13 │ │ 14  15  16  17  18  19 |
╰──╮ 20  21  22  23  24 │ │ 25  26  27  28  29 ╭───╯
   ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
               ╰────────╯ ╰────────╯            */

    combos {
        compatible = "zmk,combos";
        combo_q {
            timeout-ms = <30>;
            key-positions = <22 23>;
            bindings = <&kp Q>;
            layers = <0>;
        };
	
	combo_wl {
            timeout-ms = <30>;
            key-positions = <21 23>;
            bindings = <&wl_macro>;
            layers = <0>;
        };
	
	combo_lw {
            timeout-ms = <30>;
            key-positions = <0 3>;
            bindings = <&lw_macro>;
            layers = <0>;
        };
	
        combo_z {
            timeout-ms = <30>;
            key-positions = <21 22>;
            bindings = <&kp Z>;
            layers = <0>;
        };
	
	combo_j {
            timeout-ms = <30>;
            key-positions = <1 2>;
            bindings = <&kp J>;
            layers = <0>;
        };
	
	combo_colon {
            timeout-ms = <30>;
            key-positions = <0 1>;
            bindings = <&kp COLON>;
            layers = <0>;
        };
	
	combo_underscore {
            timeout-ms = <30>;
            key-positions = <27 28>;
            bindings = <&kp UNDER>;
            layers = <0>;
        };
	
	combo_minus {
            timeout-ms = <30>;
            key-positions = <26 27>;
            bindings = <&kp MINUS>;
            layers = <0>;
        };
	
	combo_esc {
            timeout-ms = <30>;
            key-positions = <1 12>;
            bindings = <&kp ESC>;
            layers = <0>;
        };
	
	combo_enter {
            timeout-ms = <30>;
            key-positions = <6 15>;
            bindings = <&kp ENTER>;
            layers = <0>;
        };
	
	combo_repeat {
            timeout-ms = <30>;
            key-positions = <11 23>;
            bindings = <&key_repeat>;
            layers = <0>;
        };
	
	combo_repeat2 {
            timeout-ms = <30>;
            key-positions = <16 26>;
            bindings = <&key_repeat>;
            layers = <0>;
        };
	
	combo_dollar {
            timeout-ms = <30>;
            key-positions = <11 12>;
            bindings = <&kp DOLLAR>;
            layers = <1>;
        };
	
	combo_bslsh {
            timeout-ms = <30>;
            key-positions = <10 11>;
            bindings = <&kp BSLH>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
                                 &kp L       &kp Y        &kp D        &kp K            &kp X  &kp F        &kp O            &kp U
            &quipe   &kp C       &gqt LALT R &gqt LSHFT S &gqt LCTRL T &kp B            &kp M  &gqt RCTRL N &gqt RSHFT E     &gqt RALT I &kp A  &sqtave
                     &kp G       &kp W       &gqt LGUI V  &kp P        &kp K            &kp X  &kp H        &weirdgqt RGUI 0 &quomma     &stot
                                               &kp C_MUTE  &mo NAV  &kp SPC     &skq RSHFT &mo SYM   &none
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        SYM_layer {
            bindings = <
                            &kp N7 &kp N8 &kp N9  &kp EQUAL      &kp AMPS  &kp HASH  &kp RPAR &kp RBRC
            &none &kp STAR  &kp N3 &kp N2 &kp N1  &kp LBKT       &kp RBKT  &kp SEMI  &kp LPAR &kp LBRC &kp PRCNT &none
                  &kp CARET &kp N4 &kp N5 &kp N6  &kp EQUAL      &kp AMPS  &kp PLUS  &kp LT   &kp GT   &kp TILDE
                                   &trans &kp N0  &trans         &trans    &trans    &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
       };
       
        NAV_layer {
            bindings = <
                                  &none     &none        &none        &kp PG_UP            &kp PG_DN &none         &none         &kp TAB
            &none      &kp PSCRN  &sk LALT  &sk LSHFT    &sk LCTRL    &none                &kp PG_DN &kp LEFT      &kp DOWN      &kp RIGHT &kp INS &none
                       &kp HOME   &none     &sk LGUI     &none        &kp PG_UP            &kp PG_DN &kp BSPC      &kp UP        &kp DEL   &kp END
                                            &trans       &none        &kp PG_DN            &trans    &none         &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        FN_layer {
            bindings = <
                              &kp F7 &kp F8 &kp F9 &kp F10      &none  &kp C_BRI_DN &kp C_BRI_UP &none
            &reset &bt BT_CLR &kp F1 &kp F2 &kp F3 &kp F11      &none  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &reset
                   &kp PSCRN  &kp F4 &kp F5 &kp F6 &kp F12      &none  &none        &bt BT_SEL 3 &bt BT_SEL 4 &none
                                     &trans &trans &trans       &trans &trans       &trans
            >;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };
    };
};
